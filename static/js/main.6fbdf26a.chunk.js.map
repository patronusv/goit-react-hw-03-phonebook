{"version":3,"sources":["components/AppStyled.js","components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/App.js","index.js"],"names":["AppWrapper","styled","div","FormWrapper","initialState","name","number","ContactForm","onAddItem","useState","state","setState","handleInputChange","e","target","value","prevState","onSubmit","preventDefault","user","id","uuidv4","className","type","onChange","ContactLi","li","ContactListItem","item","onBtnClick","classname","onClick","data-id","ContactListWrapper","ContactList","contacts","filter","toLowerCase","includes","map","propTypes","PropTypes","array","string","func","isRequired","FilterWrapper","Filter","App","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","some","element","alert","length","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fbdf26a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nconst AppWrapper = styled.div`\r\n  padding: 20px;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: max-content;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .page-title {\r\n    margin-bottom: 20px;\r\n  }\r\n  .contacts-title {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport default AppWrapper;\r\n","import styled from 'styled-components';\r\nconst FormWrapper = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n\r\n  /* margin: 0 auto; */\r\n  background-color: #efefef;\r\n  .form-label {\r\n    font-weight: 700;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .form-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .form-button {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .form-button:hover,\r\n  .form-button:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default FormWrapper;\r\n","import React, { useState } from 'react';\r\n// import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport FormWrapper from './ContactFormStyled';\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst ContactForm = ({ onAddItem }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = { id: uuidv4(), name: state.name, number: state.number };\r\n\r\n    onAddItem(user);\r\n    setState({ ...initialState });\r\n  };\r\n  const { name, number } = state;\r\n  return (\r\n    <FormWrapper>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"form-label\">\r\n          Name\r\n          <input className=\"form-input\" type=\"text\" name=\"name\" value={name} onChange={handleInputChange} />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          Number\r\n          <input className=\"form-input\" type=\"text\" name=\"number\" value={number} onChange={handleInputChange} />\r\n        </label>\r\n        <button className=\"form-button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onAddItem: PropTypes.func.isRequired,\r\n};\r\n\r\n// export default class ContactForm extends Component {\r\n// state = {\r\n//   name: '',\r\n//   number: '',\r\n// };\r\n// handleInputChange = e => {\r\n//   const { name, value } = e.target;\r\n//   this.setState({ [name]: value });\r\n// };\r\n// handleSubmit = e => {\r\n//   e.preventDefault();\r\n//   const user = { id: uuidv4(), name: this.state.name, number: this.state.number };\r\n\r\n//   this.props.onAddItem(user);\r\n//   this.resetState();\r\n// };\r\n// resetState = () => {\r\n//   this.setState({ name: '', number: '' });\r\n// };\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     return (\r\n// <FormWrapper>\r\n//   <form onSubmit={this.handleSubmit}>\r\n//     <label className=\"form-label\">\r\n//       Name\r\n//       <input className=\"form-input\" type=\"text\" name=\"name\" value={name} onChange={this.handleInputChange} />\r\n//     </label>\r\n//     <label className=\"form-label\">\r\n//       Number\r\n//       <input className=\"form-input\" type=\"text\" name=\"number\" value={number} onChange={this.handleInputChange} />\r\n//     </label>\r\n//     <button className=\"form-button\" type=\"submit\">\r\n//       Add contact\r\n//     </button>\r\n//   </form>\r\n// </FormWrapper>\r\n//     );\r\n//   }\r\n// }\r\n// ContactForm.propTypes = {\r\n//   onAddItem: PropTypes.func.isRequired,\r\n// };\r\n","import styled from 'styled-components';\r\nconst ContactLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n  border: 1px solid navy;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  .contact-list-name {\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n  .contact-list-number {\r\n    margin-right: 10px;\r\n  }\r\n  .contact-list-button {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .contact-list-button:hover,\r\n  .contact-list-button:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default ContactLi;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactLi from './ContactListItemStyled';\r\nconst ContactListItem = ({ item, onBtnClick }) => {\r\n  return (\r\n    <ContactLi classname=\"contact-list-item\" key={item.id}>\r\n      <span className=\"contact-list-name\">{item.name}: </span>\r\n      <span className=\"contact-list-number\">{item.number}</span>\r\n      <button className=\"contact-list-button\" type=\"button\" onClick={onBtnClick} data-id={item.id}>\r\n        Delete contact\r\n      </button>\r\n    </ContactLi>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\nContactListItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onBtnClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst ContactListWrapper = styled.div`\r\n  padding: 10px 0;\r\n  li:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport default ContactListWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './contactListItem/ContactListItem';\r\nimport ContactListWrapper from './ContactListStyled';\r\n\r\nconst ContactList = ({ contacts, filter, onBtnClick }) => {\r\n  return (\r\n    <ContactListWrapper>\r\n      <ul className=\"list\">\r\n        {contacts\r\n          .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n          .map(item => (\r\n            <ContactListItem item={item} key={item.id} onBtnClick={onBtnClick} />\r\n          ))}\r\n      </ul>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  onBtnClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst FilterWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  .filter-label {\r\n    font-weight: 700;\r\n    display: block;\r\n  }\r\n  .filter-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\nexport default FilterWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterWrapper from './FilterStyled';\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <FilterWrapper>\r\n      <label className=\"filter-label\">\r\n        Search by name\r\n        <input className=\"filter-input\" type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n","import React, { useState, useEffect } from 'react';\n// import React, { Component } from 'react';\nimport AppWrapper from './AppStyled';\n\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nconst initialState = {\n  contacts: [],\n  filter: '',\n};\nconst App = () => {\n  const [state, setState] = useState({ ...initialState });\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    if (contacts) {\n      setState({ contacts: JSON.parse(contacts) });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(state.contacts));\n    setState(prevState => ({ ...prevState, filter: state.filter }));\n  }, [state.filter, state.contacts]);\n\n  const addPhonebookItem = item => {\n    const { contacts } = state;\n    if (contacts.some(element => element.name === item.name)) {\n      alert(`${item.name} is already in contacts`);\n      return;\n    }\n    if (!item.name.length) {\n      alert('Please enter a name');\n      return;\n    }\n    if (!item.number.length) {\n      alert('Please enter a number');\n      return;\n    }\n    setState(prevState => ({ ...prevState, contacts: [...prevState.contacts, item] }));\n  };\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n  const handleDeleteContact = e => {\n    const id = e.target.dataset.id;\n    setState(prevState => ({ ...prevState, contacts: state.contacts.filter(item => item.id !== id) }));\n  };\n  const { contacts, filter } = state;\n  return (\n    <AppWrapper>\n      <h1 className=\"page-title\">Phonebook</h1>\n      <ContactForm onAddItem={addPhonebookItem} />\n      <h2 className=\"contacts-title\">Contacts</h2>\n      <Filter onChange={handleInputChange} filter={filter} />\n      <ContactList contacts={contacts} filter={filter} onBtnClick={handleDeleteContact} />\n    </AppWrapper>\n  );\n};\n\nexport default App;\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     if (contacts) {\n//       this.setState({ contacts: JSON.parse(contacts) });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n//   addPhonebookItem = item => {\n//     const { contacts } = this.state;\n//     if (contacts.some(element => element.name === item.name)) {\n//       alert(`${item.name} is already in contacts`);\n//       return;\n//     }\n//     if (!item.name.length) {\n//       alert('Please enter a name');\n//       return;\n//     }\n//     if (!item.number.length) {\n//       alert('Please enter a number');\n//       return;\n//     }\n//     this.setState(prevState => {\n//       return {\n//         contacts: [...prevState.contacts, item],\n//       };\n//     });\n//   };\n//   handleInputChange = e => {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n//   handleDeleteContact = e => {\n//     const id = e.target.dataset.id;\n//     this.setState({ contacts: this.state.contacts.filter(item => item.id !== id) });\n//   };\n//   render() {\n//     const { contacts, filter } = this.state;\n//     return (\n//       <AppWrapper>\n//         <h1 className=\"page-title\">Phonebook</h1>\n//         <ContactForm onAddItem={this.addPhonebookItem} />\n//         <h2 className=\"contacts-title\">Contacts</h2>\n//         <Filter onChange={this.handleInputChange} filter={filter} />\n//         <ContactList contacts={contacts} filter={filter} onBtnClick={this.handleDeleteContact} />\n//       </AppWrapper>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}